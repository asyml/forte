#!/usr/bin/env python

######################################################################
#  CliNER - cliner                                                   #
#                                                                    #
#  Willie Boag                                      wboag@cs.uml.edu #
#                                                                    #
#  Purpose: Command Line Interface for working with cliner.          #
######################################################################


import sys
import os


def main():

    commands = ['train', 'predict', 'evaluate']

    help_msg = \
    '''
        Usage: cliner [OPTIONS] COMMAND [ARGS]...

        Options:
          --help  Show this message and exit.

        Commands:
            %s
    ''' % '\n            '.join(commands)

    # Is argument correct?
    if len(sys.argv)<2 or sys.argv[1] not in commands or sys.argv[1] == '--help':
        sys.stderr.write('%s\n\n'%(help_msg))
        exit(1)

    # select appropriate sub-command
    subcmd = sys.argv[1]
    del sys.argv[1]

    # Where to import code from
    homedir = os.path.dirname(os.path.abspath(__file__))
    codedir = os.path.join(homedir, 'code')
    if codedir not in sys.path:
        sys.path.append(codedir)

    # Call appropriate sub-command
    if subcmd == 'train':
        import train
        train.main()
    elif subcmd == 'predict':
        import predict
        predict.main()
    elif subcmd == 'evaluate':
        import evaluate
        evaluate.main()



if __name__ == '__main__':
    main()


